stages:
  - static analysis
  - test
  - build

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

image: python:3.7

cache:
  paths:
    - .cache/pip
    - venv/

static:
  stage: static analysis
  before_script:
    - python -V
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
  script:
    - pip install black==20.8b1 flake8==3.8.4
    - black src/piven/*.py
    - flake8 --max-line-length=120 src/piven/*.py

unit_tests:
  stage: test
  before_script:
    - python -V
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
  script:
    - pwd
    - ls -l
    - export PYTHONPATH="$PYTHONPATH:."
    - python -c "import sys;print(sys.path)"
    - pip install pytest>=2.0.0
    - pip install .
    - pytest

pypi:
  stage: build
  only:
    refs:
      - master
  script:
    - pip install twine
    - python setup.py sdist bdist_wheel
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python -m twine upload --repository-url https://gitlab.com/api/v4/projects/${CI_PROJECT_ID}/packages/pypi dist/*

registry:
  stage: build
  image: docker:19.03.12
  only:
    refs:
      - master
  services:
    - docker.dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD registry.gitlab.com
    - docker build -t $CI_COMMIT_REF_SLUG .
    - docker push registry.gitlab.com/jasperginn/piven.py